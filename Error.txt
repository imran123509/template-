#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> pbds;
#define vv vector
#define pb push_back
#define ll long long
#define sz size()
#define ss second
#define ff first
const ll inf=1e9+7;
const ll MOD=998244353;
#define id double
#define all(x) (x).begin(), (x).end()
#define rep(i, a, b) for(int i=a; i<b; i++)
#define lsd(x) __builtin_ffs(x)
#define msd(x) __builtin_clz(x)
#define ctz(x) __builtin_ctz(x)
#ifndef ONLINE_JUDGE
#define debug(x) cerr<<#x<<" "; _print(x); cerr<<endl;
#else
#define debug(x)
#endif
void _print(int a){
	cerr<<a;
}
void _print(long long a){
	cerr<<a;
}
void _print(char a){
	cerr<<a;
}
void _print(string a){
	cerr<<a;
}
void _print(bool a){
	cerr<<a;
}
template<class T> void _print(vector<T> v){
	cerr<<"[";
	for(T i: v){
		_print(i);
		cerr<<" ";
	}
	cerr<<"]";
}
template<class T> void _print(set<T> s){
	cerr<<"[";
	for(T i: s){
		_print(i);
		cerr<<" ";
	}
	cerr<<"]";
}
ll power(ll a, ll b, ll mod){
	if(b==0) return 1;
	ll ans=power(a,b/2, mod);
	ans *=ans;
	ans %=mod;
	if(b%2) return ans *=a;
	return ans%mod;
	
}

void solve(){
int n;
cin>>n;
vv<int> a(n);
map<int,int> mp;
rep(i,0,n) cin>>a[i];
vv<int> pre(n);
pre[0]==a[0]==1? 1: -1;
rep(i,1,n){
	int val=a[i]==1? 1 :-1;
	pre[i]=pre[i-1]+val;
}
int ans=0;
rep(i,0,n){
	if(pre[i]==0) ans++;
	ans +=mp[pre[i]];
	mp[pre[i]]++;
}
cout<<ans<<endl;
}
//cout<<(ans==true? "YES" : "NO")<<endl;
int main(){
	 ios_base::sync_with_stdio(false);
    cin.tie(0);
	#ifndef ONLINE_JUDGE
	freopen("Error.txt","w",stderr);
	#endif
	//ll t;
	//cin>>t;
	//while(t--){
		//solve();
vector<int> v={1,2,3};
debug(v)
		int a=10;
		debug(a)
		set<int> s;
		s.insert(10384);
		debug(s)
	
//}
}